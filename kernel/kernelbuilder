#!/bin/bash

# script to automate kernel builds
# based on a post on forums.gentoo.org by user Tony0945:
# https://forums.gentoo.org/viewtopic-p-8631136.html

NPROC=$( nproc ) # run nproc to get the number of cores

cd /usr/src/linux || { echo "Did you forget 'eselect kernel set' ?" >&2 && exit 255 ; }

# Optional Parameter #1 is the location of the config file used
# if omitted the running kernel's internal configuration is used
if [ "$1" != "" ]; then
    ( cp "$1" .config && echo "Config is $1") || exit 255;
else
    echo "Using present kernel's built-in config"
    zcat /proc/config.gz >.config || {  echo "could not copy kernel config from /proc/config.gz"; exit 1; }
fi

# Apply old configuration
make olddefconfig

# Actually build
make -j"${NPROC}" || {  echo "make -j${NPROC} failed"; exit 1; }

# Install modules
make -j"${NPROC}" modules_install || { echo "make modules_install failed";  exit 2; }

# Install into /boot
mount /boot || { echo "failed to mount /boot!"; exit 3; }
make install || { echo "failed to install to /boot"; exit 4; }

# no longer needed but left in as an example
# kver="$(eselect kernel list | awk '{gsub("linux-","") ; if ($3 ~ "*") print $2}')"
# i.e. kver contains 4.9.9-gentoo

# Try to determine whether root fs is on BTRFS
mount | grep 'on / type btrfs'
if [ $? == 0 ]; then
    # Create initramfs - used here for btrfs filesystems
    genkernel --install --btrfs --kernel-config=/usr/src/linux/.config initramfs
fi

# Update grub configuration
echo "Update GRUB configuration"
echo "========================="
grub-mkconfig -o /boot/grub/grub.cfg

# Remove old kernel versions; keep previous 2
echo "Running eclean-kernel for housekeeping"
echo "======================================"
eclean-kernel -n 3
umount /boot

# Use @module-rebuild for out-of-kernel modules
echo "Building out-of-kernel modules"
emerge @module-rebuild

echo "Done - should be okay to reboot"
